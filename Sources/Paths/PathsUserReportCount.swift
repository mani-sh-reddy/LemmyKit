// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.User {
    public var reportCount: ReportCount {
        ReportCount(path: path + "/report_count")
    }

    public struct ReportCount {
        /// Path: `/user/report_count`
        public let path: String

        public func get(getReportCount: GetReportCount? = nil) -> Request<LemmyKit.GetReportCountResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(getReportCount))
        }

        private func makeGetQuery(_ getReportCount: GetReportCount?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(getReportCount, forKey: "GetReportCount")
            return encoder.items
        }

        public struct GetReportCount: Codable {
            public var communityID: Double?
            /// GetReportCount.auth
            public var auth: String

            public init(communityID: Double? = nil, auth: String) {
                self.communityID = communityID
                self.auth = auth
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(communityID, forKey: "community_id")
                encoder.encode(auth, forKey: "auth")
                return encoder.items
            }
        }
    }
}
