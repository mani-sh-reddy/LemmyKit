// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.Admin.RegistrationApplication {
    public var count: Count {
        Count(path: path + "/count")
    }

    public struct Count {
        /// Path: `/admin/registration_application/count`
        public let path: String

        public func get(getUnreadRegistrationApplicationCount: GetUnreadRegistrationApplicationCount? = nil) -> Request<LemmyKit.GetUnreadRegistrationApplicationCountResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(getUnreadRegistrationApplicationCount))
        }

        private func makeGetQuery(_ getUnreadRegistrationApplicationCount: GetUnreadRegistrationApplicationCount?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(getUnreadRegistrationApplicationCount, forKey: "GetUnreadRegistrationApplicationCount")
            return encoder.items
        }

        public struct GetUnreadRegistrationApplicationCount: Codable {
            /// GetUnreadRegistrationApplicationCount.auth
            public var auth: String

            public init(auth: String) {
                self.auth = auth
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(auth, forKey: "auth")
                return encoder.items
            }
        }
    }
}
