// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths {
    public static var federatedInstances: FederatedInstances {
        FederatedInstances(path: "/federated_instances")
    }

    public struct FederatedInstances {
        /// Path: `/federated_instances`
        public let path: String

        public func get(getFederatedInstances: GetFederatedInstances? = nil) -> Request<LemmyKit.GetFederatedInstancesResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(getFederatedInstances))
        }

        private func makeGetQuery(_ getFederatedInstances: GetFederatedInstances?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(getFederatedInstances, forKey: "GetFederatedInstances")
            return encoder.items
        }

        public struct GetFederatedInstances: Codable {
            /// GetFederatedInstances.auth
            public var auth: String?

            public init(auth: String? = nil) {
                self.auth = auth
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(auth, forKey: "auth")
                return encoder.items
            }
        }
    }
}
