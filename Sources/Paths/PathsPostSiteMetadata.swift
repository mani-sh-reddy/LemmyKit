// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.Post {
    public var siteMetadata: SiteMetadata {
        SiteMetadata(path: path + "/site_metadata")
    }

    public struct SiteMetadata {
        /// Path: `/post/site_metadata`
        public let path: String

        public func get(getSiteMetadata: GetSiteMetadata? = nil) -> Request<LemmyKit.GetSiteMetadataResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(getSiteMetadata))
        }

        private func makeGetQuery(_ getSiteMetadata: GetSiteMetadata?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(getSiteMetadata, forKey: "GetSiteMetadata")
            return encoder.items
        }

        public struct GetSiteMetadata: Codable {
            /// GetSiteMetadata.url
            public var url: String

            public init(url: String) {
                self.url = url
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(url, forKey: "url")
                return encoder.items
            }
        }
    }
}
