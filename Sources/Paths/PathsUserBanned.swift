// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.User {
    public var banned: Banned {
        Banned(path: path + "/banned")
    }

    public struct Banned {
        /// Path: `/user/banned`
        public let path: String

        public func get(getCaptcha: GetCaptcha? = nil) -> Request<LemmyKit.BannedPersonsResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(getCaptcha))
        }

        private func makeGetQuery(_ getCaptcha: GetCaptcha?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(getCaptcha, forKey: "GetCaptcha")
            return encoder.items
        }

        /// GetBannedPersons
        public struct GetCaptcha: Codable {
            /// GetBannedPersons.auth
            public var auth: String

            public init(auth: String) {
                self.auth = auth
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(auth, forKey: "auth")
                return encoder.items
            }
        }
    }
}
