// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.Community {
    public var list: List {
        List(path: path + "/list")
    }

    public struct List {
        /// Path: `/community/list`
        public let path: String

        public func get(listCommunities: ListCommunities? = nil) -> Request<LemmyKit.ListCommunitiesResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(listCommunities))
        }

        private func makeGetQuery(_ listCommunities: ListCommunities?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(listCommunities, forKey: "ListCommunities")
            return encoder.items
        }

        public struct ListCommunities: Codable {
            /// ListingType
            public var type: `Type`?
            /// SortType
            public var sort: Sort?
            /// ListCommunities.show_nsfw
            public var isShowNsfw: Bool?
            /// ListCommunities.page
            public var page: Double?
            /// ListCommunities.limit
            public var limit: Double?
            /// ListCommunities.auth
            public var auth: String?

            /// ListingType
            public enum `Type`: String, Codable, CaseIterable {
                case all = "All"
                case local = "Local"
                case subscribed = "Subscribed"
            }

            /// SortType
            public enum Sort: String, Codable, CaseIterable {
                case active = "Active"
                case hot = "Hot"
                case new = "New"
                case old = "Old"
                case topDay = "TopDay"
                case topWeek = "TopWeek"
                case topMonth = "TopMonth"
                case topYear = "TopYear"
                case topAll = "TopAll"
                case mostComments = "MostComments"
                case newComments = "NewComments"
                case topHour = "TopHour"
                case topSixHour = "TopSixHour"
                case topTwelveHour = "TopTwelveHour"
                case topThreeMonths = "TopThreeMonths"
                case topSixMonths = "TopSixMonths"
                case topNineMonths = "TopNineMonths"
            }

            public init(type: `Type`? = nil, sort: Sort? = nil, isShowNsfw: Bool? = nil, page: Double? = nil, limit: Double? = nil, auth: String? = nil) {
                self.type = type
                self.sort = sort
                self.isShowNsfw = isShowNsfw
                self.page = page
                self.limit = limit
                self.auth = auth
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(type, forKey: "type_")
                encoder.encode(sort, forKey: "sort")
                encoder.encode(isShowNsfw, forKey: "show_nsfw")
                encoder.encode(page, forKey: "page")
                encoder.encode(limit, forKey: "limit")
                encoder.encode(auth, forKey: "auth")
                return encoder.items
            }
        }
    }
}
