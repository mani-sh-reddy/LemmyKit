// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths {
    public static var post: Post {
        Post(path: "/post")
    }

    public struct Post {
        /// Path: `/post`
        public let path: String

        public func get(getPost: GetPost? = nil) -> Request<LemmyKit.GetPostResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(getPost))
        }

        private func makeGetQuery(_ getPost: GetPost?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(getPost, forKey: "GetPost")
            return encoder.items
        }

        public struct GetPost: Codable {
            /// PostId
            public var id: Double?
            public var commentID: Double?
            /// GetPost.auth
            public var auth: String?

            public init(id: Double? = nil, commentID: Double? = nil, auth: String? = nil) {
                self.id = id
                self.commentID = commentID
                self.auth = auth
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(id, forKey: "id")
                encoder.encode(commentID, forKey: "comment_id")
                encoder.encode(auth, forKey: "auth")
                return encoder.items
            }
        }

        public func post(_ body: LemmyKit.CreatePost? = nil) -> Request<LemmyKit.PostResponse> {
            Request(path: path, method: "POST", body: body)
        }

        public func put(_ body: LemmyKit.EditPost? = nil) -> Request<Void> {
            Request(path: path, method: "PUT", body: body)
        }
    }
}
