// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.User {
    public var unreadCount: UnreadCount {
        UnreadCount(path: path + "/unread_count")
    }

    public struct UnreadCount {
        /// Path: `/user/unread_count`
        public let path: String

        public func get(getUnreadCount: GetUnreadCount? = nil) -> Request<LemmyKit.GetUnreadCountResponse> {
            Request(path: path, method: "GET", query: makeGetQuery(getUnreadCount))
        }

        private func makeGetQuery(_ getUnreadCount: GetUnreadCount?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(getUnreadCount, forKey: "GetUnreadCount")
            return encoder.items
        }

        public struct GetUnreadCount: Codable {
            /// GetUnreadCount.auth
            public var auth: String

            public init(auth: String) {
                self.auth = auth
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(auth, forKey: "auth")
                return encoder.items
            }
        }
    }
}
