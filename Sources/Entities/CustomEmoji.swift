// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct CustomEmoji: Codable {
    /// CustomEmojiId
    public var id: Double
    public var localSiteID: Double
    /// CustomEmoji.shortcode
    public var shortcode: String
    /// CustomEmoji.image_url
    public var imageURL: String
    /// CustomEmoji.alt_text
    public var altText: String
    /// CustomEmoji.category
    public var category: String
    /// CustomEmoji.published
    public var published: String
    /// CustomEmoji.updated
    public var updated: String?

    public init(id: Double, localSiteID: Double, shortcode: String, imageURL: String, altText: String, category: String, published: String, updated: String? = nil) {
        self.id = id
        self.localSiteID = localSiteID
        self.shortcode = shortcode
        self.imageURL = imageURL
        self.altText = altText
        self.category = category
        self.published = published
        self.updated = updated
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decode(Double.self, forKey: "id")
        self.localSiteID = try values.decode(Double.self, forKey: "local_site_id")
        self.shortcode = try values.decode(String.self, forKey: "shortcode")
        self.imageURL = try values.decode(String.self, forKey: "image_url")
        self.altText = try values.decode(String.self, forKey: "alt_text")
        self.category = try values.decode(String.self, forKey: "category")
        self.published = try values.decode(String.self, forKey: "published")
        self.updated = try values.decodeIfPresent(String.self, forKey: "updated")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(id, forKey: "id")
        try values.encode(localSiteID, forKey: "local_site_id")
        try values.encode(shortcode, forKey: "shortcode")
        try values.encode(imageURL, forKey: "image_url")
        try values.encode(altText, forKey: "alt_text")
        try values.encode(category, forKey: "category")
        try values.encode(published, forKey: "published")
        try values.encodeIfPresent(updated, forKey: "updated")
    }
}
