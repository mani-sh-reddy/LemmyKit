// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct Register: Codable {
    /// Register.username
    public var username: String
    /// Register.password
    public var password: String
    /// Register.password_verify
    public var passwordVerify: String
    /// Register.show_nsfw
    public var isShowNsfw: Bool
    /// Register.email
    public var email: String?
    /// Register.captcha_uuid
    public var captchaUUID: String?
    /// Register.captcha_answer
    public var captchaAnswer: String?
    /// Register.honeypot
    public var honeypot: String?
    /// Register.answer
    public var answer: String?

    public init(username: String, password: String, passwordVerify: String, isShowNsfw: Bool, email: String? = nil, captchaUUID: String? = nil, captchaAnswer: String? = nil, honeypot: String? = nil, answer: String? = nil) {
        self.username = username
        self.password = password
        self.passwordVerify = passwordVerify
        self.isShowNsfw = isShowNsfw
        self.email = email
        self.captchaUUID = captchaUUID
        self.captchaAnswer = captchaAnswer
        self.honeypot = honeypot
        self.answer = answer
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.username = try values.decode(String.self, forKey: "username")
        self.password = try values.decode(String.self, forKey: "password")
        self.passwordVerify = try values.decode(String.self, forKey: "password_verify")
        self.isShowNsfw = try values.decode(Bool.self, forKey: "show_nsfw")
        self.email = try values.decodeIfPresent(String.self, forKey: "email")
        self.captchaUUID = try values.decodeIfPresent(String.self, forKey: "captcha_uuid")
        self.captchaAnswer = try values.decodeIfPresent(String.self, forKey: "captcha_answer")
        self.honeypot = try values.decodeIfPresent(String.self, forKey: "honeypot")
        self.answer = try values.decodeIfPresent(String.self, forKey: "answer")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(username, forKey: "username")
        try values.encode(password, forKey: "password")
        try values.encode(passwordVerify, forKey: "password_verify")
        try values.encode(isShowNsfw, forKey: "show_nsfw")
        try values.encodeIfPresent(email, forKey: "email")
        try values.encodeIfPresent(captchaUUID, forKey: "captcha_uuid")
        try values.encodeIfPresent(captchaAnswer, forKey: "captcha_answer")
        try values.encodeIfPresent(honeypot, forKey: "honeypot")
        try values.encodeIfPresent(answer, forKey: "answer")
    }
}
