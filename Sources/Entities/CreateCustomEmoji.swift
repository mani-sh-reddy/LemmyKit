// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct CreateCustomEmoji: Codable {
    /// CreateCustomEmoji.category
    public var category: String
    /// CreateCustomEmoji.shortcode
    public var shortcode: String
    /// CreateCustomEmoji.image_url
    public var imageURL: String
    /// CreateCustomEmoji.alt_text
    public var altText: String
    /// CreateCustomEmoji.keywords
    public var keywords: [String]
    /// CreateCustomEmoji.auth
    public var auth: String

    public init(category: String, shortcode: String, imageURL: String, altText: String, keywords: [String], auth: String) {
        self.category = category
        self.shortcode = shortcode
        self.imageURL = imageURL
        self.altText = altText
        self.keywords = keywords
        self.auth = auth
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.category = try values.decode(String.self, forKey: "category")
        self.shortcode = try values.decode(String.self, forKey: "shortcode")
        self.imageURL = try values.decode(String.self, forKey: "image_url")
        self.altText = try values.decode(String.self, forKey: "alt_text")
        self.keywords = try values.decode([String].self, forKey: "keywords")
        self.auth = try values.decode(String.self, forKey: "auth")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(category, forKey: "category")
        try values.encode(shortcode, forKey: "shortcode")
        try values.encode(imageURL, forKey: "image_url")
        try values.encode(altText, forKey: "alt_text")
        try values.encode(keywords, forKey: "keywords")
        try values.encode(auth, forKey: "auth")
    }
}
