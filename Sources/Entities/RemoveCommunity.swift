// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct RemoveCommunity: Codable {
    public var communityID: Double
    /// RemoveCommunity.removed
    public var isRemoved: Bool
    /// RemoveCommunity.reason
    public var reason: String?
    /// RemoveCommunity.expires
    public var expires: Double?
    /// RemoveCommunity.auth
    public var auth: String

    public init(communityID: Double, isRemoved: Bool, reason: String? = nil, expires: Double? = nil, auth: String) {
        self.communityID = communityID
        self.isRemoved = isRemoved
        self.reason = reason
        self.expires = expires
        self.auth = auth
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.communityID = try values.decode(Double.self, forKey: "community_id")
        self.isRemoved = try values.decode(Bool.self, forKey: "removed")
        self.reason = try values.decodeIfPresent(String.self, forKey: "reason")
        self.expires = try values.decodeIfPresent(Double.self, forKey: "expires")
        self.auth = try values.decode(String.self, forKey: "auth")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(communityID, forKey: "community_id")
        try values.encode(isRemoved, forKey: "removed")
        try values.encodeIfPresent(reason, forKey: "reason")
        try values.encodeIfPresent(expires, forKey: "expires")
        try values.encode(auth, forKey: "auth")
    }
}
