// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct ModRemoveCommentView: Codable {
    public var modRemoveComment: ModRemoveComment
    /// Person
    public var moderator: Person?
    public var comment: Comment
    /// Person
    public var commenter: Person
    public var post: Post
    public var community: Community

    public init(modRemoveComment: ModRemoveComment, moderator: Person? = nil, comment: Comment, commenter: Person, post: Post, community: Community) {
        self.modRemoveComment = modRemoveComment
        self.moderator = moderator
        self.comment = comment
        self.commenter = commenter
        self.post = post
        self.community = community
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.modRemoveComment = try values.decode(ModRemoveComment.self, forKey: "mod_remove_comment")
        self.moderator = try values.decodeIfPresent(Person.self, forKey: "moderator")
        self.comment = try values.decode(Comment.self, forKey: "comment")
        self.commenter = try values.decode(Person.self, forKey: "commenter")
        self.post = try values.decode(Post.self, forKey: "post")
        self.community = try values.decode(Community.self, forKey: "community")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(modRemoveComment, forKey: "mod_remove_comment")
        try values.encodeIfPresent(moderator, forKey: "moderator")
        try values.encode(comment, forKey: "comment")
        try values.encode(commenter, forKey: "commenter")
        try values.encode(post, forKey: "post")
        try values.encode(community, forKey: "community")
    }
}
