// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct GetModlogResponse: Codable {
    /// GetModlogResponse.removed_posts
    public var removedPosts: [ModRemovePostView]
    /// GetModlogResponse.locked_posts
    public var lockedPosts: [ModLockPostView]
    /// GetModlogResponse.featured_posts
    public var featuredPosts: [ModFeaturePostView]
    /// GetModlogResponse.removed_comments
    public var removedComments: [ModRemoveCommentView]
    /// GetModlogResponse.removed_communities
    public var removedCommunities: [ModRemoveCommunityView]
    /// GetModlogResponse.banned_from_community
    public var bannedFromCommunity: [ModBanFromCommunityView]
    /// GetModlogResponse.banned
    public var banned: [ModBanView]
    /// GetModlogResponse.added_to_community
    public var addedToCommunity: [ModAddCommunityView]
    /// GetModlogResponse.transferred_to_community
    public var transferredToCommunity: [ModTransferCommunityView]
    /// GetModlogResponse.added
    public var added: [ModAddView]
    /// GetModlogResponse.admin_purged_persons
    public var adminPurgedPersons: [AdminPurgePersonView]
    /// GetModlogResponse.admin_purged_communities
    public var adminPurgedCommunities: [AdminPurgeCommunityView]
    /// GetModlogResponse.admin_purged_posts
    public var adminPurgedPosts: [AdminPurgePostView]
    /// GetModlogResponse.admin_purged_comments
    public var adminPurgedComments: [AdminPurgeCommentView]
    /// GetModlogResponse.hidden_communities
    public var hiddenCommunities: [ModHideCommunityView]

    public init(removedPosts: [ModRemovePostView], lockedPosts: [ModLockPostView], featuredPosts: [ModFeaturePostView], removedComments: [ModRemoveCommentView], removedCommunities: [ModRemoveCommunityView], bannedFromCommunity: [ModBanFromCommunityView], banned: [ModBanView], addedToCommunity: [ModAddCommunityView], transferredToCommunity: [ModTransferCommunityView], added: [ModAddView], adminPurgedPersons: [AdminPurgePersonView], adminPurgedCommunities: [AdminPurgeCommunityView], adminPurgedPosts: [AdminPurgePostView], adminPurgedComments: [AdminPurgeCommentView], hiddenCommunities: [ModHideCommunityView]) {
        self.removedPosts = removedPosts
        self.lockedPosts = lockedPosts
        self.featuredPosts = featuredPosts
        self.removedComments = removedComments
        self.removedCommunities = removedCommunities
        self.bannedFromCommunity = bannedFromCommunity
        self.banned = banned
        self.addedToCommunity = addedToCommunity
        self.transferredToCommunity = transferredToCommunity
        self.added = added
        self.adminPurgedPersons = adminPurgedPersons
        self.adminPurgedCommunities = adminPurgedCommunities
        self.adminPurgedPosts = adminPurgedPosts
        self.adminPurgedComments = adminPurgedComments
        self.hiddenCommunities = hiddenCommunities
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.removedPosts = try values.decode([ModRemovePostView].self, forKey: "removed_posts")
        self.lockedPosts = try values.decode([ModLockPostView].self, forKey: "locked_posts")
        self.featuredPosts = try values.decode([ModFeaturePostView].self, forKey: "featured_posts")
        self.removedComments = try values.decode([ModRemoveCommentView].self, forKey: "removed_comments")
        self.removedCommunities = try values.decode([ModRemoveCommunityView].self, forKey: "removed_communities")
        self.bannedFromCommunity = try values.decode([ModBanFromCommunityView].self, forKey: "banned_from_community")
        self.banned = try values.decode([ModBanView].self, forKey: "banned")
        self.addedToCommunity = try values.decode([ModAddCommunityView].self, forKey: "added_to_community")
        self.transferredToCommunity = try values.decode([ModTransferCommunityView].self, forKey: "transferred_to_community")
        self.added = try values.decode([ModAddView].self, forKey: "added")
        self.adminPurgedPersons = try values.decode([AdminPurgePersonView].self, forKey: "admin_purged_persons")
        self.adminPurgedCommunities = try values.decode([AdminPurgeCommunityView].self, forKey: "admin_purged_communities")
        self.adminPurgedPosts = try values.decode([AdminPurgePostView].self, forKey: "admin_purged_posts")
        self.adminPurgedComments = try values.decode([AdminPurgeCommentView].self, forKey: "admin_purged_comments")
        self.hiddenCommunities = try values.decode([ModHideCommunityView].self, forKey: "hidden_communities")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(removedPosts, forKey: "removed_posts")
        try values.encode(lockedPosts, forKey: "locked_posts")
        try values.encode(featuredPosts, forKey: "featured_posts")
        try values.encode(removedComments, forKey: "removed_comments")
        try values.encode(removedCommunities, forKey: "removed_communities")
        try values.encode(bannedFromCommunity, forKey: "banned_from_community")
        try values.encode(banned, forKey: "banned")
        try values.encode(addedToCommunity, forKey: "added_to_community")
        try values.encode(transferredToCommunity, forKey: "transferred_to_community")
        try values.encode(added, forKey: "added")
        try values.encode(adminPurgedPersons, forKey: "admin_purged_persons")
        try values.encode(adminPurgedCommunities, forKey: "admin_purged_communities")
        try values.encode(adminPurgedPosts, forKey: "admin_purged_posts")
        try values.encode(adminPurgedComments, forKey: "admin_purged_comments")
        try values.encode(hiddenCommunities, forKey: "hidden_communities")
    }
}
