// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct GetPersonDetails: Codable {
    public var personID: Double?
    /// GetPersonDetails.username
    public var username: String?
    /// SortType
    public var sort: SortType?
    /// GetPersonDetails.page
    public var page: Double?
    /// GetPersonDetails.limit
    public var limit: Double?
    public var communityID: Double?
    /// GetPersonDetails.saved_only
    public var isSavedOnly: Bool?
    /// GetPersonDetails.auth
    public var auth: String?

    public init(personID: Double? = nil, username: String? = nil, sort: SortType? = nil, page: Double? = nil, limit: Double? = nil, communityID: Double? = nil, isSavedOnly: Bool? = nil, auth: String? = nil) {
        self.personID = personID
        self.username = username
        self.sort = sort
        self.page = page
        self.limit = limit
        self.communityID = communityID
        self.isSavedOnly = isSavedOnly
        self.auth = auth
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.personID = try values.decodeIfPresent(Double.self, forKey: "person_id")
        self.username = try values.decodeIfPresent(String.self, forKey: "username")
        self.sort = try values.decodeIfPresent(SortType.self, forKey: "sort")
        self.page = try values.decodeIfPresent(Double.self, forKey: "page")
        self.limit = try values.decodeIfPresent(Double.self, forKey: "limit")
        self.communityID = try values.decodeIfPresent(Double.self, forKey: "community_id")
        self.isSavedOnly = try values.decodeIfPresent(Bool.self, forKey: "saved_only")
        self.auth = try values.decodeIfPresent(String.self, forKey: "auth")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(personID, forKey: "person_id")
        try values.encodeIfPresent(username, forKey: "username")
        try values.encodeIfPresent(sort, forKey: "sort")
        try values.encodeIfPresent(page, forKey: "page")
        try values.encodeIfPresent(limit, forKey: "limit")
        try values.encodeIfPresent(communityID, forKey: "community_id")
        try values.encodeIfPresent(isSavedOnly, forKey: "saved_only")
        try values.encodeIfPresent(auth, forKey: "auth")
    }
}
